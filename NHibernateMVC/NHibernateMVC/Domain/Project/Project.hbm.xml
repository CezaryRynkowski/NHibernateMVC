<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="NHibernateMVC" namespace="NHibernateMVC.Domain.Project" xmlns="urn:nhibernate-mapping-2.2">
  <class name="Project" table="Project" lazy="true" >
    <id name="ProjectId" column="ProjectId">
      <generator class="guid.comb" />
    </id>
    <property name="ProjectName">
      <column name="ProjectName" sql-type="varchar" not-null="true" />
    </property>
    <!--<set name="Employees" table="EmployeeProject" cascade="none">
      <key column="ProjectId"/>
      <many-to-many column="EmployeeId" class="NHibernateMVC.Domain.Employee.Employee" />
    </set>-->
      <bag name="Employees" lazy="true"
         table="EmployeeProject" cascade="save-update">
        <key column="ProjectId" />
        <many-to-many class="NHibernateMVC.Domain.Employee.Employee"  column="EmployeeId"/>
      </bag>
  </class>
  <sql-query name="projectSearchQuery">
    <![CDATA[
    select 
p.ProjectId as ProjectId,
p.ProjectName as ProjectName
from Project p
    ]]>
  </sql-query>
  <sql-query name="employeFromProject">
    <![CDATA[
    select 
x.EmployeeId as EmployeeId,
e.FirstName as FirstName,
e.LastName as LastName
from Project p
join EmployeeProject x
on p.ProjectId = x.ProjectId
join Employee e
on x.EmployeeId = e.EmployeeId
where 
(:projectId is null or p.ProjectId = :projectId)
    ]]>
  </sql-query>
  <sql-query name="deleteEmployee">
    <![CDATA[
    delete from EmployeeProject 
    where 
    (EmployeeId = :employee)
    and
    (ProjectId = :project)   
    ]]>
  </sql-query>
</hibernate-mapping>