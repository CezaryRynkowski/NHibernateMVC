<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="NHibernateMVC" namespace="NHibernateMVC.Domain.Employee" xmlns="urn:nhibernate-mapping-2.2">
  <class name="Employee" table="Employee" lazy="true" >
    <id name="Id" column="Id" >
      <generator class="guid.comb" />
    </id>
    <property name="FirstName">
      <column name="FirstName" sql-type="varchar" not-null="true" />
    </property>
    <property name="LastName">
      <column name="LastName" sql-type="varchar" not-null="true" />
    </property>
    <property name="BirthDate">
      <column name="BirthDate" sql-type="date" not-null="true" />
    </property>
    <property name="Sex">
      <column name="Sex" sql-type="int" not-null="true" />
    </property>
    <component name="Address">
      <property name="City">
        <column name="City" sql-type="varchar" not-null="true" />
      </property>
      <property name="Street">
        <column name="Street" sql-type="varchar" not-null="true" />
      </property>
      <property name="Country">
        <column name="Country" sql-type="varchar" not-null="true" />
      </property>
      <property name="ZipCode">
        <column name="ZipCode" sql-type="varchar" not-null="true" />
      </property>
    </component>
    <bag name="Projects" lazy="true"
         table="EmployeeProject" cascade="save-update">
      <key column="EmployeeId" />
      <many-to-many class="NHibernateMVC.Domain.Project.Project"  column="ProjectId"/>
    </bag>

    <joined-subclass
      table="Manager"
      name="Manager">
      <key column="ManagerId"/>
      <property name="EmployeeId" column="EmployeeId"/>
      <property name="RoomNumber" column="RoomNumber"/>
    </joined-subclass>


  </class>

  <sql-query name="employeeSearchQuery">
    <![CDATA[
        select
e.Id as EmployeeId,
e.FirstName as FirstName,
e.LastName as LastName,
e.ManagerId as ManagerId,
e.City as City,
e.Street as Street,
e.Country as Country,
e.ZipCode as ZipCode,
j.PositionId as PositionId,
j.StartDate as StartDate,
j.StopDate as StopDate
from Employee e
left JOIN JobHistory j
on j.EmployeeId = e.Id
where 
(:employeeid is null or e.Id = :employeeid)
and
(:firstname is null or e.FirstName = :firstname)
and
(:lastname is null or e.LastName = :lastname)
and
(:manager is null or e.ManagerId = :manager)
and
(:zipcode is null or e.ZipCode = :zipcode)
and
(:position is null or j.PositionId = :position and j.StopDate is null)
and
(j.StopDate is null)
    ]]>
  </sql-query>
</hibernate-mapping>