<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping assembly="NHibernateMVC" namespace="NHibernateMVC.Domain.Employee" xmlns="urn:nhibernate-mapping-2.2">
  <class name="Employee" table="Employee" lazy="true" >
    <id name="EmployeeId" column="EmployeeId" >
      <generator class="guid.comb" />
    </id>
    <property name="FirstName">
      <column name="FirstName" sql-type="varchar" not-null="true" />
    </property>
    <property name="LastName">
      <column name="LastName" sql-type="varchar" not-null="true" />
    </property>
    <property name="BirthDate">
      <column name="BirthDate" sql-type="date" not-null="true" />
    </property>
    <property name="Sex">
      <column name="Sex" sql-type="int" not-null="true" />
    </property>
    <property name="ManagerId">
      <column name="ManagerId" sql-type="uniqueidentifier" not-null="false" />
    </property>
    <property name="City">
      <column name="City" sql-type="varchar" not-null="true" />
    </property>
    <property name="Street">
      <column name="Street" sql-type="varchar" not-null="true" />
    </property>
    <property name="Country">
      <column name="Country" sql-type="varchar" not-null="true" />
    </property>
    <property name="ZipCode">
      <column name="ZipCode" sql-type="varchar" not-null="true" />
    </property>
    <set name="Projects" inverse="true" table="EmployeeProject" cascade="persist">
      <key column="EmployeeId"/>
      <many-to-many column="ProjectId" class="NHibernateMVC.Domain.Project.Project" />
    </set>
  </class>

  <sql-query name="employeeSearchQuery">
    <![CDATA[
    select
e.EmployeeId as EmployeeId,
e.FirstName as FirstName,
e.LastName as LastName,
e.ManagerId as ManagerId,
e.City as City,
e.Street as Street,
e.Country as Country,
e.ZipCode as ZipCode
from Employee e
where 
(:employeeid is null or e.EmployeeId = :employeeid)
and
(:firstname is null or e.FirstName = :firstname)
and
(:lastname is null or e.LastName = :lastname)
and
(:manager is null or e.ManagerId = :manager)
and
(:zipcode is null or e.ZipCode = :zipcode)
    ]]>
  </sql-query>
</hibernate-mapping>
<!--inner join Manager m 
on e.EmployeeId = m.EmployeeId-->