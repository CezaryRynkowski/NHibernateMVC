@using Castle.Core.Internal
@model NHibernateMVC.Models.Employee.EmployeeViewModel
@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Update", "Employee", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <fieldset>
        <legend>Create new Employee</legend>

        <div class="row-fluid">
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("EmployeeID")
                        @Html.TextBoxFor(m => m.EmployeeForm.EmployeeId, new { @readonly = true })
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("Birth date of employee")
                        @Html.TextBoxFor(m => m.EmployeeForm.BirthDate, "{0:d}, dt")
                    </div>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("First name of employee")
                        @Html.TextBoxFor(m => m.EmployeeForm.FirstName)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("Last name of employee")
                        @Html.TextBoxFor(m => m.EmployeeForm.LastName)
                    </div>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("Sex")
                        @Html.TextBoxFor(m => m.EmployeeForm.Sex)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("ManagerId")
                        @Html.TextBoxFor(m => m.EmployeeForm.ManagerId)
                    </div>
                </div>
            </div>
        </div>




    </fieldset>
    <fieldset>
        <legend>Adress Employee</legend>

        <div class="row-fluid">
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("City")
                        @Html.TextBoxFor(m => m.EmployeeForm.City)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("County")
                        @Html.TextBoxFor(m => m.EmployeeForm.County)
                    </div>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("Street")
                        @Html.TextBoxFor(m => m.EmployeeForm.Street)
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    <div class="controls">
                        @Html.Label("ZipCode")
                        @Html.TextBoxFor(m => m.EmployeeForm.ZipCode)
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    <fieldset>
        <legend>Projects</legend>
        @{
            bool exist = Model.EmployeeForm.Projects.IsNullOrEmpty();
        }
        @if (exist)
        {
            <div class="span10">
                <div class="control-group">
                    <div class="controls">
                        <div class="alert alert-warning" role="alert">
                            <p>The employee is not in any project</p>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (!exist)
        {
            <div class="panel panel-default">
                <table class="table table-bordered table-condensed table-hover" id="ProjectTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Project Name</th>
                            <th>#</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.EmployeeForm.Projects)
                        {
                            <tr>
                                <td>@item.ProjectId</td>
                                <td>@item.ProjectName</td>
                                <td><a class="btn btn-mini" href="@Url.Action("Edit", "Project", new { projectId = item.ProjectId })"><i class="glyphicon glyphicon-edit"></i>Edit</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </fieldset>
    <input type="submit" value="Save" class="btn btn-primary" />
}